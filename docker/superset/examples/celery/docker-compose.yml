version: '3'
services:
  redis:
    image: redis
    restart: always
    volumes:
      - redis:/data
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_USER: superset
    volumes:
      - postgres:/var/lib/postgresql/data
  superset:
    image: zomato/superset
    restart: always
    environment:
      SUPERSET_STATSD_HOST: telegraf
      # SUPERSET_STATSD_ENABLE: 'True'
    depends_on:
      - postgres
      - redis
      # - telegraf  ## If SUPERSET_STATSD_ENABLE = True
    ports:
      - "8088:8088"
  worker:
    image: zomato/superset
    restart: always
    environment:
      SUPERSET_STATSD_HOST: telegraf
      # SUPERSET_STATSD_ENABLE: 'True'
    depends_on:
      - postgres
      - redis
      # - telegraf  ## If SUPERSET_STATSD_ENABLE = True
    command: celery worker --app=superset.sql_lab:celery_app --pool=gevent -Ofair -c 2
    healthcheck:
      # test: ['CMD-SHELL','celery', 'inspect', 'ping', '--app=superset.sql_lab:celery_app', '-d', 'celery@$$HOSTNAME']
      # interval: 1m
      disable: true
  flower:
    image: zomato/superset
    restart: always
    depends_on:
      - redis
    command: celery flower --app=superset.sql_lab:celery_app --port=8088
    ports:
      - "8089:8088"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088"]
      interval: 1m
  # telegraf:
  #   image: zomato/telegraf-superset
  #   restart: always
  #   environment:
  #     AWS_ACCESS_KEY_ID: A
  #     AWS_SECRET_ACCESS_KEY: B
  #   ports:
  #     - "8125:8125/udp"
volumes:
  postgres:
    external: false
  redis:
    external: false
